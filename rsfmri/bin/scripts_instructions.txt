DCM Pipeline
============

dcm-generate-VOIs.sh
--------------------
Input    : VOI file (ROIs.txt) and subjects 
Use      : creates spm batch script that extracts the VOIs specified in the 
           VOIfile  from all of the given participants
Output   : generate_(model name)_VOIs.m

generate_(model name)_VOIs.m
----------------------------
Input    : requires the subjects and contrasts are real
Use      : spm batch script to extract VOIs from the participants
Output   : VOIs in each subjects mcvs*_results folder

extract_mcvs*_vois.m
--------------------
Input    : requires VOIs to be real
Use      : creates a txt file for each VOI with info about the placement for 
           each subject
Output   : (VOI name)_xyz.txt

dcm-plot-vois.py
----------------
Input    : (VOI name)_xyz.txt files for each VOI of interest, needs access to           
           nilearn (I just source activate ketolmpraxic)
Use      : creates an image with the placement of each VOI on a glass brain
Output   : vois.png

combine_masks.sh
----------------
Input    : requires masks from generate_(model name)_VOIs.m of the form           
           VOI_(VOI name)_mask.nii 
Use      : gzips the VOI file and combines L and R masks for VOIs using FSL
Output   : VOI_(VOI name)_combined_mask.nii

combine_ROIs_batch.m
--------------------
Input    : requires VOI_(VOI name)_combined_mask.nii
Use      : creates new combined ROI mat file to use for later
Output   : VOI_(VOI name)_combined_1.mat

dcm-generate-models.py
----------------------
Input    : model file (smm_modulatory.txt), dcm dir (mcvsa_results), subjects
Use      : creates a spm script I steal to create model_creator_(model name).m
Output   : testModelBatch.m

model_creator_(model name).m
Input    : requires VOIs to be real
Use      : creates a DCM model for each participant
Output   : DCM_(model name).mat

dcm-extract-model-data.sh
-------------------------
Input    : DCM model name (without .mat extension), dcm dir, and subjects
Use      : creates a script to extract data from the various model estimates 
Output   : extract_smm_(model name).m

extract_model_data.m
--------------------
Input    : requires DCM_smm_(model name).mat to exist, and subject 100023 has
           all valid files
Use      : extracts individual model data and concatenates according to PD or
           CONTROL or BOTH
Output   : smm_(model name)_data_(A-D).txt

dcm-generate-bms-analysis.sh
----------------------------
Input    : list of models to be compared in a file, DCM dir, BMS dir, and subjects
Use      : creates a batch script to compare models through BMS
Output   : smm_bms_comparison.m

smm_bms_comparison.m
--------------------
Input    : requires that DCM_smm_(model name).mat exists
Use    : compares models through BMS
Output    : BMS.mat
